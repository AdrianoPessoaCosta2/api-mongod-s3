version: '3.8'

services:
  mongo:
    image: mongo
    ports:
      - "27017:27017"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: test
      MONGO_INITDB_ROOT_PASSWORD: test123
    volumes:
      - ./mong-init/init-mons-db.js:/docker-entrypoint-initdb.d/init-mons-db.js:ro
    networks:
      - app-network

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: test
      ME_CONFIG_MONGODB_ADMINPASSWORD: test123
      ME_CONFIG_MONGODB_URL: mongodb://test:test123@mongo:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    networks:
      - app-network

  localstack:
    image: localstack/localstack
    container_name: localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - DEFAULT_REGION=ap-northeast-1
    volumes:
      - "./localstack/localstack-init.sh:/docker-entrypoint-initaws.d/localstack-init.sh"

  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8080:8080"
      - "5005:5005"
    depends_on:
      - mongo
      - localstack
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=ap-northeast-1
      - SPRING_DATA_MONGODB_URI=mongodb://test:test123@mongo:27017/mons_db?authSource=admin
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
